__author__ = 'jmeline'

from datetime import datetime

from odm2api.ODM2 import serviceBase
from odm2api.ODM2.models import *


# ################################################################################
# Annotations
# ################################################################################

class UpdateODM2(serviceBase):
    def test(self):
        return None


# ################################################################################
# CV
# ################################################################################




# ################################################################################
# Core
# ################################################################################
    def updateResultValidDateTime(self, resultId, dateTime):

        #check type of "validdatetime'
        #if not datetime do this:
        # dt = dateTime.to_datetime()
        #else dt = dateTime
        if (type(dateTime) != datetime):
            dt = dateTime.to_datetime()
        else:
            dt = dateTime
            q = self._session.query(Results).filter(Results.ResultID==int(resultId)).update({'ValidDateTime':dt})
            self._session.commit()

    def updateResult(self, resultID, valuecount = None):
        q = self._session.query(Results).filter(Results.ResultID ==int(resultID))
        if valuecount:
            q.update({"ValueCount":valuecount})

        self._session.commit()


    def updateAction(self, actionID, begin=None, end=None):
        q = self._session.query(Actions).filter(Actions.ActionID == int(actionID))
        if begin:
            q.update({"BeginDateTime": begin})
        if end:
            q.update({"EndDateTime": end})

        self._session.commit()


# ################################################################################
# Data Quality
# ################################################################################




# ################################################################################
# Equipment
# ################################################################################





# ################################################################################
# Extension Properties
# ################################################################################




# ################################################################################
# External Identifiers
# ################################################################################




# ################################################################################
# Lab Analyses
# ################################################################################




# ################################################################################
# Provenance
# ################################################################################




# ################################################################################
# Results
# ################################################################################




# ################################################################################
# Sampling Features
# ################################################################################




# ################################################################################
# Sensors
# ################################################################################



# ################################################################################
# ODM2
# ################################################################################


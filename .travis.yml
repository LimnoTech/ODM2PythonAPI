# use http://lint.travis-ci.org/ to check the file.

language: python

sudo: required

dist: precise

cache:
  directories:
    - $HOME/miniconda

# Removing the directory will remove the env but leave the cached packages
# at $HOME/miniconda/pkgs. That is a win-win because when re-creating the
# env we will download only the new packages.
before_cache:
  - rm -rf $HOME/miniconda/envs/TEST

services:
  - mysql
  - postgresql

addons:
  apt:
    packages:
      # FIXME: when activating the services above I don't think these are needed.
      - odbcinst1debian2
      - odbcinst
      - tdsodbc
      - e2fsprogs
      # FIXME: the dependencies below can probably be replaced by conda.
      - libc6
      - freetds-dev
      - freetds-bin
      - unixodbc
      - unixodbc-dev
      - mysql-client
      # FIXME: I don't see the need for these anywhere.
      - cmake
      - libproj-dev
      - libgeos-dev
      - libspatialite-dev

matrix:
  fast_finish: true
  include:
  - python: 2.7
    env: TEST_TARGET=default
  - python: 3.6
    env: TEST_TARGET=default
  - python: 2.7
    env: TEST_TARGET=coding_standards
  - python: 3.6
    env: TEST_TARGET=docs
  allow_failures:
  - python: 2.7
    env: TEST_TARGET=coding_standards
  - python: 3.6
    env: TEST_TARGET=default

before_script:
  - ./ci-helpers/mysql_setup.sh
  - ./ci-helpers/postgres_setup.sh
  - ./ci-helpers/travis/freetds.sh

before_install:
  - |
    URL="http://bit.ly/miniconda"
    echo ""
    if [ ! -f $HOME/miniconda/bin/conda ] ; then
      echo "Fresh miniconda installation."
      wget $URL -O miniconda.sh
      rm -rf $HOME/miniconda
      bash miniconda.sh -b -p $HOME/miniconda
    fi
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
  - conda update conda
  - conda config --add channels odm2 --force
  - conda create --name TEST python=$TRAVIS_PYTHON_VERSION --file requirements.txt --file requirements-dev.txt
  - source activate TEST

# Test source distribution.
install:
  - python setup.py sdist && version=$(python setup.py --version) && pushd dist  && pip install odm2api-${version}.tar.gz && popd

script:
  - if [[ $TEST_TARGET == 'default' ]]; then
      cp -r tests /tmp && cd /tmp ;
      py.test -vv tests ;
    fi

  - if [[ $TEST_TARGET == 'coding_standards' ]]; then
      find . -type f -name "*.py" ! -name 'conf.py' | xargs flake8 --max-line-length=100 ;
    fi

  - if [[ $TEST_TARGET == 'docs' ]]; then
      set -e ;
      conda install doctr ;
      pushd docs ;
      make clean html linkcheck ;
      popd ;
    fi
